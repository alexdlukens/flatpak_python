# coding: utf-8

"""
    Flathub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from flathub_python_api.models.user_result import UserResult

class TestUserResult(unittest.TestCase):
    """UserResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserResult:
        """Test UserResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserResult`
        """
        model = UserResult()
        if include_optional:
            return UserResult(
                id = 56,
                display_name = '',
                default_account = None,
                connected_accounts = [
                    null
                    ],
                accepted_publisher_agreement_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                roles = [
                    flathub_python_api.models.user_role_result.UserRoleResult(
                        name = '', 
                        has_role = True, )
                    ],
                github_repos = [
                    flathub_python_api.models.github_repository_result.GithubRepositoryResult(
                        id = 56, 
                        reponame = '', )
                    ],
                owned_apps = [
                    flathub_python_api.models.user_owned_app_result.UserOwnedAppResult(
                        app_id = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return UserResult(
                id = 56,
                display_name = '',
                default_account = None,
                connected_accounts = [
                    null
                    ],
                accepted_publisher_agreement_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                roles = [
                    flathub_python_api.models.user_role_result.UserRoleResult(
                        name = '', 
                        has_role = True, )
                    ],
                github_repos = [
                    flathub_python_api.models.github_repository_result.GithubRepositoryResult(
                        id = 56, 
                        reponame = '', )
                    ],
                owned_apps = [
                    flathub_python_api.models.user_owned_app_result.UserOwnedAppResult(
                        app_id = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
        )
        """

    def testUserResult(self):
        """Test UserResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
