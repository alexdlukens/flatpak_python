# coding: utf-8

"""
    Flathub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from flathub_python_api.models.app_pick_recommendations_response import AppPickRecommendationsResponse

class TestAppPickRecommendationsResponse(unittest.TestCase):
    """AppPickRecommendationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppPickRecommendationsResponse:
        """Test AppPickRecommendationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppPickRecommendationsResponse`
        """
        model = AppPickRecommendationsResponse()
        if include_optional:
            return AppPickRecommendationsResponse(
                recommendations = [
                    flathub_python_api.models.app_pick_recommendation.AppPickRecommendation(
                        app_id = '', 
                        number_of_times_app_of_the_week = 56, 
                        last_time_app_of_the_week = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        number_of_times_app_of_the_day = 56, 
                        last_time_app_of_the_day = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ]
            )
        else:
            return AppPickRecommendationsResponse(
                recommendations = [
                    flathub_python_api.models.app_pick_recommendation.AppPickRecommendation(
                        app_id = '', 
                        number_of_times_app_of_the_week = 56, 
                        last_time_app_of_the_week = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        number_of_times_app_of_the_day = 56, 
                        last_time_app_of_the_day = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
        )
        """

    def testAppPickRecommendationsResponse(self):
        """Test AppPickRecommendationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
