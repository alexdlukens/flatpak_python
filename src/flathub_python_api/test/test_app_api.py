# coding: utf-8

"""
    Flathub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from flathub_python_api.api.app_api import AppApi


class TestAppApi(unittest.TestCase):
    """AppApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AppApi()

    def tearDown(self) -> None:
        pass

    def test_add_to_favorites_favorites_app_id_add_post(self) -> None:
        """Test case for add_to_favorites_favorites_app_id_add_post

        Add To Favorites
        """
        pass

    def test_get_addons_addon_app_id_get(self) -> None:
        """Test case for get_addons_addon_app_id_get

        Get Addons
        """
        pass

    def test_get_appstream_appstream_app_id_get(self) -> None:
        """Test case for get_appstream_appstream_app_id_get

        Get Appstream
        """
        pass

    def test_get_eol_message_appid_eol_message_app_id_get(self) -> None:
        """Test case for get_eol_message_appid_eol_message_app_id_get

        Get Eol Message Appid
        """
        pass

    def test_get_eol_message_eol_message_get(self) -> None:
        """Test case for get_eol_message_eol_message_get

        Get Eol Message
        """
        pass

    def test_get_eol_rebase_appid_eol_rebase_app_id_get(self) -> None:
        """Test case for get_eol_rebase_appid_eol_rebase_app_id_get

        Get Eol Rebase Appid
        """
        pass

    def test_get_eol_rebase_eol_rebase_get(self) -> None:
        """Test case for get_eol_rebase_eol_rebase_get

        Get Eol Rebase
        """
        pass

    def test_get_exceptions_exceptions_get(self) -> None:
        """Test case for get_exceptions_exceptions_get

        Get Exceptions
        """
        pass

    def test_get_exceptions_exceptions_get_0(self) -> None:
        """Test case for get_exceptions_exceptions_get_0

        Get Exceptions
        """
        pass

    def test_get_exceptions_for_app_exceptions_app_id_get(self) -> None:
        """Test case for get_exceptions_for_app_exceptions_app_id_get

        Get Exceptions For App
        """
        pass

    def test_get_exceptions_for_app_exceptions_app_id_get_0(self) -> None:
        """Test case for get_exceptions_for_app_exceptions_app_id_get_0

        Get Exceptions For App
        """
        pass

    def test_get_favorites_favorites_get(self) -> None:
        """Test case for get_favorites_favorites_get

        Get Favorites
        """
        pass

    def test_get_is_fullscreen_app_is_fullscreen_app_app_id_get(self) -> None:
        """Test case for get_is_fullscreen_app_is_fullscreen_app_app_id_get

        Get Isfullscreenapp
        """
        pass

    def test_get_platforms_platforms_get(self) -> None:
        """Test case for get_platforms_platforms_get

        Get Platforms
        """
        pass

    def test_get_runtime_list_runtimes_get(self) -> None:
        """Test case for get_runtime_list_runtimes_get

        Get Runtime List
        """
        pass

    def test_get_summary_summary_app_id_get(self) -> None:
        """Test case for get_summary_summary_app_id_get

        Get Summary
        """
        pass

    def test_is_favorited_favorites_app_id_get(self) -> None:
        """Test case for is_favorited_favorites_app_id_get

        Is Favorited
        """
        pass

    def test_list_appstream_appstream_get(self) -> None:
        """Test case for list_appstream_appstream_get

        List Appstream
        """
        pass

    def test_post_search_search_post(self) -> None:
        """Test case for post_search_search_post

        Post Search
        """
        pass

    def test_remove_from_favorites_favorites_app_id_remove_delete(self) -> None:
        """Test case for remove_from_favorites_favorites_app_id_remove_delete

        Remove From Favorites
        """
        pass


if __name__ == '__main__':
    unittest.main()
