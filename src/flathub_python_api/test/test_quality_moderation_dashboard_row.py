# coding: utf-8

"""
    Flathub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.quality_moderation_dashboard_row import QualityModerationDashboardRow

class TestQualityModerationDashboardRow(unittest.TestCase):
    """QualityModerationDashboardRow unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QualityModerationDashboardRow:
        """Test QualityModerationDashboardRow
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QualityModerationDashboardRow`
        """
        model = QualityModerationDashboardRow()
        if include_optional:
            return QualityModerationDashboardRow(
                id = '',
                quality_moderation_status = openapi_client.models.quality_moderation_status.QualityModerationStatus(
                    passes = True, 
                    unrated = 56, 
                    passed = 56, 
                    not_passed = 56, 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    review_requested_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                appstream = None,
                installs_last_7_days = 56
            )
        else:
            return QualityModerationDashboardRow(
                id = '',
                quality_moderation_status = openapi_client.models.quality_moderation_status.QualityModerationStatus(
                    passes = True, 
                    unrated = 56, 
                    passed = 56, 
                    not_passed = 56, 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    review_requested_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
        )
        """

    def testQualityModerationDashboardRow(self):
        """Test QualityModerationDashboardRow"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
