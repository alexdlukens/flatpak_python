# coding: utf-8

"""
    Flathub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_pick_recommendation import AppPickRecommendation

class TestAppPickRecommendation(unittest.TestCase):
    """AppPickRecommendation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppPickRecommendation:
        """Test AppPickRecommendation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppPickRecommendation`
        """
        model = AppPickRecommendation()
        if include_optional:
            return AppPickRecommendation(
                app_id = '',
                number_of_times_app_of_the_week = 56,
                last_time_app_of_the_week = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                number_of_times_app_of_the_day = 56,
                last_time_app_of_the_day = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
            )
        else:
            return AppPickRecommendation(
                app_id = '',
                number_of_times_app_of_the_week = 56,
                last_time_app_of_the_week = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                number_of_times_app_of_the_day = 56,
                last_time_app_of_the_day = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
        )
        """

    def testAppPickRecommendation(self):
        """Test AppPickRecommendation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
